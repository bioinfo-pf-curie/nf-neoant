/*
 * Define modules options
 */

process {

  publishDir = [
    path: { "${params.outDir}/${task.process.tokenize(':')[-1].tokenize('_')[0]}" },
    mode: 'copy',
    saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
  ]

  withName:'salmonQuantFromBamFlow:starAlign' {
    publishDir = [
      path: { "${params.outDir}/STAR/${meta.sampleName}" },
      mode: 'copy'
    ]
  }

  withName:'salmonQuantFromBamFlow:salmonQuantFromBam' {
    publishDir = [
      path: { "${params.outDir}/Counts/${meta.sampleName}" },
      mode: 'copy',
      pattern: "*tpm.txt"
    ]
  }

  withName:'vcfAnnotFlow:vepAnnot' {
    publishDir = [
      path: { "${params.outDir}/VCF/${meta.sampleName}" },
      mode: 'copy'
    ]
  }

  withName:'vcfAnnotFlow:vcfAddExp' {
    publishDir = [
      path: { "${params.outDir}/VCF/${meta.sampleName}" },
      mode: 'copy'
    ]
  }

  withName:'vcfAnnotFlow:vcfSplit' {
    publishDir = [
      path: { "${params.outDir}/VCF/${meta.sampleName}" },
      mode: 'copy'
    ]
  }
 
  withName:'vcfAnnotFlow:vcfAddRnaCov' {
    publishDir = [
      path: { "${params.outDir}/VCF/${meta.sampleName}" },
      mode: 'copy'
    ]
  }

  withName:'seq2HLA' {
    publishDir = [
      path: { "${params.outDir}/seq2HLA/${meta.sampleName}" },
      mode: 'copy'
    ]
  }

  withName:'vcfAnnotFlow:sortVcf' {
    publishDir = [
      path: { "${params.outDir}/VCF/${meta.sampleName}" },
      mode: 'copy'
    ]
    ext.args = {[
      params.min_cov_dna >0 ? "FORMAT/DP['\${id}']>=${params.min_cov_dna} " : "",
      params.min_vaf_dna >0 ? "& FORMAT/AF['\${id}':0]>=${params.min_vaf_dna} " : "",
      params.min_vaf_rna >0 ? "& FORMAT/RAF['\${id}':0]>=${params.min_vaf_rna} " : "",
      params.min_cov_rna >0 ? "& FORMAT/RDP['\${id}']>=${params.min_cov_rna} " : "",
    ].join(' ').trim()}
  }

   withName:'pVacseqFlow:pvacseqRun' {
    publishDir = [
      path: { "${params.outDir}/pVacSeq/" },
      mode: 'copy'
    ]
   ext.args = params.pvacSeqArgs
  }

   withName:'pVacFuseFlow:arribaFusion' {
    publishDir = [
      path: { "${params.outDir}/pVacFuse/${meta.sampleName}" },
      mode: 'copy'
    ]
  }

   withName:'pVacFuseFlow:pvacfuseRun' {
    publishDir = [
      path: { "${params.outDir}/pVacFuse/" },
      mode: 'copy'
    ]
  }

   withName:'mixcr' {
    publishDir = [
      path: { "${params.outDir}/mixcr/" },
      mode: 'copy'
    ]
  }

}