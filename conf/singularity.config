def checkProfileSingularity(path){
  if (new File(path).exists()){
    File directory = new File(path)
    def contents = []
    directory.eachFileRecurse (groovy.io.FileType.FILES) { file -> contents << file }
    if (!path?.trim() || contents == null || contents.size() == 0){
      println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
      System.exit(-1)
    }
  }else{
    println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
    System.exit(-1)
  }
}

singularity {
  enabled = true
  autoMounts = true
  runOptions = "${params.geniac.containers.singularityRunOptions}"
}


process {
  checkProfileSingularity("${params.geniac.singularityImagePath}")
  withLabel:arriba{ container = "${params.geniac.singularityImagePath}/arriba.sif"}
  withLabel:salmon{ container = "${params.geniac.singularityImagePath}/salmon.sif" }
  withLabel:star{ container = "${params.geniac.singularityImagePath}/star.sif" }
  withLabel:hlala{ container = "${params.geniac.singularityImagePath}/hlala.sif" }
  withLabel:vep{ container = "${params.geniac.singularityImagePath}/vep.sif" }
  withLabel:pvacseq{ container = "${params.geniac.singularityImagePath}/pvacseq.sif" }
  withLabel:gatk_bam_readcount{ container = "${params.geniac.singularityImagePath}/gatk_bam_readcount.sif" }
  withLabel:bcftools{ container = "${params.geniac.singularityImagePath}/bcftools.sif" }
  withLabel:arriba{ container = "${params.geniac.singularityImagePath}/arriba.sif" }
  withLabel:mixcr{ container = "${params.geniac.singularityImagePath}/mixcr.sif" }
  withLabel:seq2hla{ container = "${params.geniac.singularityImagePath}/seq2hla.sif" }
}
